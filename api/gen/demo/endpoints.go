// Code generated by goa v3.11.1, DO NOT EDIT.
//
// demo endpoints
//
// Command:
// $ goa gen github.com/sevein/goademo/design -o api

package demo

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "demo" service endpoints.
type Endpoints struct {
	Show       goa.Endpoint
	PlainList0 goa.Endpoint
	PlainList1 goa.Endpoint
	List0      goa.Endpoint
	List1      goa.Endpoint
	List2      goa.Endpoint
	List3      goa.Endpoint
}

// NewEndpoints wraps the methods of the "demo" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Show:       NewShowEndpoint(s),
		PlainList0: NewPlainList0Endpoint(s),
		PlainList1: NewPlainList1Endpoint(s),
		List0:      NewList0Endpoint(s),
		List1:      NewList1Endpoint(s),
		List2:      NewList2Endpoint(s),
		List3:      NewList3Endpoint(s),
	}
}

// Use applies the given middleware to all the "demo" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Show = m(e.Show)
	e.PlainList0 = m(e.PlainList0)
	e.PlainList1 = m(e.PlainList1)
	e.List0 = m(e.List0)
	e.List1 = m(e.List1)
	e.List2 = m(e.List2)
	e.List3 = m(e.List3)
}

// NewShowEndpoint returns an endpoint function that calls the method "show" of
// service "demo".
func NewShowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ShowPayload)
		res, err := s.Show(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedGoademoThing(res, "extended")
		return vres, nil
	}
}

// NewPlainList0Endpoint returns an endpoint function that calls the method
// "plain-list-0" of service "demo".
func NewPlainList0Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		res, err := s.PlainList0(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedGoademoThingCollection(res, "default")
		return vres, nil
	}
}

// NewPlainList1Endpoint returns an endpoint function that calls the method
// "plain-list-1" of service "demo".
func NewPlainList1Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		res, view, err := s.PlainList1(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedGoademoThingCollection(res, view)
		return vres, nil
	}
}

// NewList0Endpoint returns an endpoint function that calls the method "list0"
// of service "demo".
func NewList0Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.List0(ctx)
	}
}

// NewList1Endpoint returns an endpoint function that calls the method "list1"
// of service "demo".
func NewList1Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.List1(ctx)
	}
}

// NewList2Endpoint returns an endpoint function that calls the method "list2"
// of service "demo".
func NewList2Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.List2(ctx)
	}
}

// NewList3Endpoint returns an endpoint function that calls the method "list3"
// of service "demo".
func NewList3Endpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.List3(ctx)
	}
}
