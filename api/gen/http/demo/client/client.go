// Code generated by goa v3.11.1, DO NOT EDIT.
//
// demo client HTTP transport
//
// Command:
// $ goa gen github.com/sevein/goademo/design -o api

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the demo service endpoint HTTP clients.
type Client struct {
	// Show Doer is the HTTP client used to make requests to the show endpoint.
	ShowDoer goahttp.Doer

	// PlainList0 Doer is the HTTP client used to make requests to the plain-list-0
	// endpoint.
	PlainList0Doer goahttp.Doer

	// PlainList1 Doer is the HTTP client used to make requests to the plain-list-1
	// endpoint.
	PlainList1Doer goahttp.Doer

	// List0 Doer is the HTTP client used to make requests to the list0 endpoint.
	List0Doer goahttp.Doer

	// List1 Doer is the HTTP client used to make requests to the list1 endpoint.
	List1Doer goahttp.Doer

	// List2 Doer is the HTTP client used to make requests to the list2 endpoint.
	List2Doer goahttp.Doer

	// List3 Doer is the HTTP client used to make requests to the list3 endpoint.
	List3Doer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the demo service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		ShowDoer:            doer,
		PlainList0Doer:      doer,
		PlainList1Doer:      doer,
		List0Doer:           doer,
		List1Doer:           doer,
		List2Doer:           doer,
		List3Doer:           doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// Show returns an endpoint that makes HTTP requests to the demo service show
// server.
func (c *Client) Show() goa.Endpoint {
	var (
		decodeResponse = DecodeShowResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildShowRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ShowDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "show", err)
		}
		return decodeResponse(resp)
	}
}

// PlainList0 returns an endpoint that makes HTTP requests to the demo service
// plain-list-0 server.
func (c *Client) PlainList0() goa.Endpoint {
	var (
		decodeResponse = DecodePlainList0Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildPlainList0Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.PlainList0Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "plain-list-0", err)
		}
		return decodeResponse(resp)
	}
}

// PlainList1 returns an endpoint that makes HTTP requests to the demo service
// plain-list-1 server.
func (c *Client) PlainList1() goa.Endpoint {
	var (
		decodeResponse = DecodePlainList1Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildPlainList1Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.PlainList1Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "plain-list-1", err)
		}
		return decodeResponse(resp)
	}
}

// List0 returns an endpoint that makes HTTP requests to the demo service list0
// server.
func (c *Client) List0() goa.Endpoint {
	var (
		decodeResponse = DecodeList0Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildList0Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.List0Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "list0", err)
		}
		return decodeResponse(resp)
	}
}

// List1 returns an endpoint that makes HTTP requests to the demo service list1
// server.
func (c *Client) List1() goa.Endpoint {
	var (
		decodeResponse = DecodeList1Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildList1Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.List1Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "list1", err)
		}
		return decodeResponse(resp)
	}
}

// List2 returns an endpoint that makes HTTP requests to the demo service list2
// server.
func (c *Client) List2() goa.Endpoint {
	var (
		decodeResponse = DecodeList2Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildList2Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.List2Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "list2", err)
		}
		return decodeResponse(resp)
	}
}

// List3 returns an endpoint that makes HTTP requests to the demo service list3
// server.
func (c *Client) List3() goa.Endpoint {
	var (
		decodeResponse = DecodeList3Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildList3Request(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.List3Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("demo", "list3", err)
		}
		return decodeResponse(resp)
	}
}
